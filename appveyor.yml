# AppVeyor config for MPF-MC
# This config based on the Kivy Appveyor installation script:
# https://github.com/kivy/kivy/blob/master/appveyor.yml

os: Visual Studio 2015
environment:
  USE_SDL2: 1
  USE_GSTREAMER: 1

  matrix:
  - PYVER: 34
    BITTNESS: 86
    COMPILER: mingw
  - PYVER: 34
    BITTNESS: 64
    COMPILER: mingw
  - PYVER: 35
    BITTNESS: 86
    COMPILER: msvc
  - PYVER: 35
    BITTNESS: 64
    COMPILER: msvc
  - PYVER: 36
    BITTNESS: 86
    COMPILER: msvc
  - PYVER: 36
    BITTNESS: 64
    COMPILER: msvc

  pypi_user:
    secure: kxNKBuVMdOz6LjJPQb7PMQ==

  pypi_password:
    secure: nmmwU7UgFbrGUJwIr0Vo6cHzCuxlvW4vjg9TjkwrjmE=

install:
- ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-desktop.ps1'))
build_script:
- ps: >-
    function Check-Error

    {
      param([int]$SuccessVal = 0)
      if ($SuccessVal -ne $LastExitCode) {
        throw "Failed with exit code $LastExitCode"
      }
    }


    echo "Bitness=$env:BITTNESS, scheduled=$env:APPVEYOR_SCHEDULED_BUILD, forced=$env:APPVEYOR_FORCED_BUILD, rebuild=$env:APPVEYOR_RE_BUILD, tagged=$env:APPVEYOR_REPO_TAG"


    cd $env:APPVEYOR_BUILD_FOLDER

    $PYTHONPATH = "$env:APPVEYOR_BUILD_FOLDER;$PYTHONPATH"

    echo "Build folder: $env:APPVEYOR_BUILD_FOLDER."


    C:\Python27\Scripts\pip.exe install pydrive

    Check-Error


    if ($env:BITTNESS -eq "64") {
      $PYTHON_ROOT = "C:\Python$env:PYVER-x64"
      $WHELL_BITNESS = "win_amd64"
    } else {
      $PYTHON_ROOT = "C:\Python$env:PYVER"
      $WHELL_BITNESS = "win32"
    }

    $env:PATH = "$PYTHON_ROOT;$PYTHON_ROOT\Scripts;$env:PATH;C:\Program Files\7-Zip"

    $env:PATH = $PYTHON_ROOT+"\share\glew\bin;"+$PYTHON_ROOT+"\share\sdl2\bin;"+$PYTHON_ROOT+"\share\gstreamer\bin;"+$env:PATH

    $WHEEL_DATE = python -c "from datetime import datetime;print(datetime.utcnow().strftime('%Y%m%d'))"

    Check-Error

    git clone -q --branch=dev --recursive https://github.com/missionpinball/mpf.git C:\projects\mpf

    Check-Error

    cd build_scripts

    python calculate_mpf_branch.py
    checkout_mpf_branch.bat  # auto generated by calculate_mpf_branch.py

    # install mpf. Branch was set by checkout_mpf_branch.bat
    cd \\projects\\mpf
    python -m pip install .  # installs mpf

    cd $env:APPVEYOR_BUILD_FOLDER


    $GIT_TAG = git rev-parse --short HEAD

    Check-Error

    python -c "from mpfmc._version import __version__"

    Check-Error

    $WHEEL_VERSION = python -c "from mpfmc._version import __version__;print(__version__)"

    Check-Error

    echo "MPF-MC version is: $WHEEL_VERSION"

    python -c "import sys;print('Python version is {}'.format(sys.version))"

    Check-Error

    $env:DO_TEST = "True"

    if ($env:APPVEYOR_SCHEDULED_BUILD -eq "True"){
      $env:DO_TEST = "False"
    }


    $DO_WHEEL = "True"

    # Set new wheel name, keep default if release (tag)
    # release: Kivy-X.Y.Z-cpAB-cpABm-ARCH.whl (Kivy_examples-X.Y.Z-py2.py3-none-any.whl)
    # nightly: Kivy-X.Y.Z.dev0-cpAB-cpABm-ARCH.whl (Kivy_examples-X.Y.Z.dev0-py2.py3-none-any.whl)

    if ($env:APPVEYOR_REPO_TAG -eq "true"){
      $DO_WHEEL = "True"
    } elseif ($env:APPVEYOR_SCHEDULED_BUILD -eq "True" -or $env:APPVEYOR_FORCED_BUILD -eq "True" -or $env:APPVEYOR_RE_BUILD -eq "True"){
      $DO_WHEEL = "True"
    } else {
      $DO_WHEEL = "False"
    }

    echo "test=$env:DO_TEST, make_wheel=$DO_WHEEL"

    python -m pip install pip wheel setuptools --upgrade

    Check-Error

    if ($env:COMPILER -ne "msvc") {
      python -c "with open(r'$PYTHON_ROOT\Lib\distutils\distutils.cfg', 'wb') as fh: fh.write(b'[build]\ncompiler = mingw32\n')"
      Check-Error
      pip install -i https://pypi.anaconda.org/carlkl/simple mingwpy --cache-dir C:\tmp_$env:PYVER_$env:BITTNESS\mingwpy
      Check-Error
    }

    pip install mock cython==0.24.1 pygments docutils nose kivy.deps.glew_dev kivy.deps.glew kivy.deps.gstreamer_dev kivy.deps.sdl2_dev kivy.deps.sdl2 --cache-dir C:\tmp_$env:PYVER_$env:BITTNESS\deps

    pip install kivy.deps.gstreamer --extra-index-url https://mpf.kantert.net/simple/ --cache-dir C:\tmp_$env:PYVER_$env:BITTNESS\gstreamer

    Check-Error

    pip install kivy.deps.angle

    Copy-Item "$PYTHON_ROOT\Lib\site-packages\kivy\deps\*" -destination "$env:APPVEYOR_BUILD_FOLDER\kivy\deps" -recurse

    Remove-Item "$PYTHON_ROOT\Lib\site-packages\kivy" -Force -Recurse

    if ($env:DO_TEST -eq "True" -or $DO_WHEEL -eq "True") {
      python setup.py build_ext --inplace
      Check-Error
    }

    if ($DO_WHEEL -eq "True") {
      python setup.py bdist_wheel
      Check-Error

      python setup.py sdist --formats=gztar
      Check-Error

      cd dist
      python ../build_scripts/rename_wheels.py

      python -m twine upload -u %pypi_user% -p %pypi_password% --skip-existing *
    }

test_script:
- ps: >-
    function Check-Error

    {
      param([int]$SuccessVal = 0)
      if ($SuccessVal -ne $LastExitCode) {
        throw "Failed with exit code $LastExitCode"
      }
    }

    if ($env:DO_TEST -eq "True"){
      $env:KIVY_GL_BACKEND = "angle_sdl2"
      python -m unittest discover -s mpfmc/tests
      Check-Error
    }

