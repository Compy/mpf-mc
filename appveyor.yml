# AppVeyor config for MPF-MC
# This config based on https://packaging.python.org/en/latest/appveyor/

environment:

  matrix:
    - PYTHON: "C:\\Python34"
      PLAT_NAME: "win32"
    - PYTHON: "C:\\Python34-x64"
      PLAT_NAME: "win_amd64"

  pypi_user:
    secure: kxNKBuVMdOz6LjJPQb7PMQ==

  pypi_password:
    secure: nmmwU7UgFbrGUJwIr0Vo6cHzCuxlvW4vjg9TjkwrjmE=

install:
  - "%PYTHON%\\python.exe -m pip install -U setuptools wheel pip mock"

  # todo write a script to set these two things
  - "set MPF_BRANCH=dev"
  - "set DEPLOY_TO_PYPI=1"

  - "%PYTHON%\\python.exe -m pip install git+git://github.com/missionpinball/mpf.git@%MPF_BRANCH%"

  - "copy c:\\projects\\mpf-mc\\build_scripts\\distutils.cfg %PYTHON%\\Lib\\distutils\\distutils.cfg"
  - "type %PYTHON%\\Lib\\distutils\\distutils.cfg"  # verify this file is correct in the log
  - "%PYTHON%\\python.exe -m pip install -i https://pypi.anaconda.org/carlkl/simple mingwpy"
  - "set USE_SDL2=1"
  - "set USE_GSTREAMER=1"
  - "%PYTHON%\\python.exe -m pip install cython docutils pygments pypiwin32 kivy.deps.sdl2 kivy.deps.glew kivy.deps.gstreamer kivy.deps.glew_dev kivy.deps.sdl2_dev kivy.deps.gstreamer_dev --extra-index-url https://kivy.org/downloads/packages/simple/"
  # - "%PYTHON%\\python.exe -m pip install ."
  - "set PATH=%PATH%;C:\mingw32"
  - "%PYTHON%\\python.exe setup.py build --compiler=mingw32 install"

build: off

test_script:
  - "%PYTHON%\\python.exe -m unittest discover mpfmc"

after_test:
  - "%PYTHON%\\python.exe setup.py bdist_wheel --plat-name %PLAT_NAME%"
  - "if %PLAT_NAME% == win32 %PYTHON%\\python.exe setup.py sdist --dist-dir=%~dp0%/dist --formats=gztar"

artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  - path: dist\*

deploy_script:
  - "if not %DEPLOY_TO_PYPI% == 1 exit /B 0"
  - "cd dist"
  - "%PYTHON%\\python.exe -m pip install twine"
  - "twine upload -u %pypi_user% -p %pypi_password%"
