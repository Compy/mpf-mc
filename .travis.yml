matrix:
  fast_finish: true
  include:
   - language: python
     python: 3.4
     os: linux
   - language: generic
     os: osx

install:

 - if [ "${TRAVIS_OS_NAME}" == "linux" ]; then
      yes | sudo add-apt-repository ppa:zoogie/sdl2-snapshots;
      yes | sudo add-apt-repository ppa:gstreamer-developers/ppa;
      sudo apt-get update;
      sudo apt-get -y install libsdl2-dev libsdl2-ttf-dev libsdl2-image-dev libsdl2-mixer-dev;
      sudo apt-get -y install libgstreamer1.0-dev gstreamer1.0-alsa gstreamer1.0-plugins-base gstreamer1.0-plugins-good;
      sudo apt-get -y install python-dev libsmpeg-dev libswscale-dev libavformat-dev libavcodec-dev libjpeg-dev libtiff4-dev libX11-dev libmtdev-dev;
      sudo apt-get -y install python-setuptools build-essential libgl1-mesa-dev libgles2-mesa-dev;
      sudo apt-get -y install xvfb pulseaudio;
      pip install --upgrade cython pillow coveralls;
      pip install kivy;
      pip install mpf;
      pip install https://github.com/missionpinball/mpf/zipball/dev;
      python setup.py install;
   fi;

 - if [ "${TRAVIS_OS_NAME}" == "osx" ]; then
      curl -O -L https://github.com/tatsuhiro-t/aria2/releases/download/release-1.19.3/aria2-1.19.3-osx-darwin.dmg;
      hdiutil attach aria2-1.19.3-osx-darwin.dmg;
      sudo installer -package "/Volumes/aria2 1.19.3 Intel/aria2.pkg" -target /;

      curl -O -L https://www.libsdl.org/release/SDL2-2.0.4.dmg;
      curl -O -L https://www.libsdl.org/projects/SDL_image/release/SDL2_image-2.0.1.dmg;
      curl -O -L https://www.libsdl.org/projects/SDL_mixer/release/SDL2_mixer-2.0.1.dmg;
      curl -O -L https://www.libsdl.org/projects/SDL_ttf/release/SDL2_ttf-2.0.13.dmg;
      /usr/local/aria2/bin/aria2c -x 10 http://gstreamer.freedesktop.org/data/pkg/osx/1.7.1/gstreamer-1.0-1.7.1-x86_64.pkg;
      /usr/local/aria2/bin/aria2c -x 10 http://gstreamer.freedesktop.org/data/pkg/osx/1.7.1/gstreamer-1.0-devel-1.7.1-x86_64.pkg;
      curl -O -L http://www.sveinbjorn.org/files/software/platypus.zip;
      curl -O -L http://www.kekaosx.com/release/Keka-1.0.4-intel.dmg;
      hdiutil attach Keka-1.0.4-intel.dmg;
      hdiutil attach SDL2-2.0.4.dmg;
      sudo cp -a /Volumes/SDL2/SDL2.framework /Library/Frameworks/;
      hdiutil attach SDL2_image-2.0.1.dmg;
      sudo cp -a /Volumes/SDL2_image/SDL2_image.framework /Library/Frameworks/;
      hdiutil attach SDL2_ttf-2.0.13.dmg;
      sudo cp -a /Volumes/SDL2_ttf/SDL2_ttf.framework /Library/Frameworks/;
      hdiutil attach SDL2_mixer-2.0.1.dmg;
      sudo cp -a /Volumes/SDL2_mixer/SDL2_mixer.framework /Library/Frameworks/;
      sudo installer -package gstreamer-1.0-1.7.1-x86_64.pkg -target /;
      sudo installer -package gstreamer-1.0-devel-1.7.1-x86_64.pkg -target /;
      unzip platypus.zip;
      mkdir -p /usr/local/bin;
      mkdir -p /usr/local/share/platypus;
      mkdir -p /usr/local/man/platypus;
      cp Platypus-5.0/Platypus.app/Contents/Resources/platypus_clt /usr/local/bin/platypus;
      cp Platypus-5.0/Platypus.app/Contents/Resources/ScriptExec /usr/local/share/platypus/ScriptExec;
      cp Platypus-5.0/Platypus.app/Contents/Resources/MainMenu.nib /usr/local/share/platypus/MainMenu.nib;
      chmod -R 755 /usr/local/share/platypus;
      curl -O -L https://www.python.org/ftp/python/3.5.1/python-3.5.1-macosx10.6.pkg;
      sudo installer -package python-3.5.1-macosx10.6.pkg -target /;
      pip3 install --upgrade --user cython pillow nose mock wheel pip setuptools;

      pip3 install https://github.com/missionpinball/mpf/zipball/dev;

    fi;

before_script:
  - if [ "${TRAVIS_OS_NAME}" == "linux" ]; then
      export DISPLAY=:99.0;
      /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1280x720x24 -ac +extension GLX;
      export PYTHONPATH=$PYTHONPATH:$(pwd);
    fi;

  - if [ "${TRAVIS_OS_NAME}" == "osx" ]; then
      export CC=clang;
      export CXX=clang;
      export FFLAGS=-ff2c;
      export USE_OPENGL_MOCK=1;
    fi;

script:
  - if [ "${TRAVIS_OS_NAME}" == "linux" ]; then
      coverage run -m unittest discover -s mpfmc/tests;
    fi;

  - if [ "${TRAVIS_OS_NAME}" == "osx" ]; then
      pip3 install .;
      coverage run -m unittest discover -s mpfmc/tests;
      python3 setup.py bdist_wheel;
    fi;

after_success:
 - if [ "${TRAVIS_OS_NAME}" == "linux" ]; then
     coveralls
   fi;

  - if [ "${TRAVIS_OS_NAME}" == "osx" ]; then
      python3 setup.py bdist_wheel;
    fi;